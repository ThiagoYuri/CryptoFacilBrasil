// <auto-generated />
using System;
using Infrastructure.Entityframework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Entityframework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241110133841_Update_Message")]
    partial class Update_Message
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CryptoFacilBrasil.Domain.Models.Chat", b =>
                {
                    b.Property<long>("IdChat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdChat"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdChat");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("CryptoFacilBrasil.Domain.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsBot")
                        .HasColumnType("boolean");

                    b.Property<string>("TextValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("CryptoFacilBrasil.Domain.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long?>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MethodPay")
                        .HasColumnType("int");

                    b.Property<int>("Network")
                        .HasColumnType("int");

                    b.Property<string>("SellOrBuy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusOrder")
                        .HasColumnType("int");

                    b.Property<int>("TypeTransferNetwork")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("CryptoFacilBrasil.Domain.Models.Message", b =>
                {
                    b.HasOne("CryptoFacilBrasil.Domain.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("CryptoFacilBrasil.Domain.Models.OrderDetail", b =>
                {
                    b.HasOne("CryptoFacilBrasil.Domain.Models.Chat", "Chat")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ChatId");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("CryptoFacilBrasil.Domain.Models.Chat", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
